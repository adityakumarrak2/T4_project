name: Provision t3.micro EC2

on:
  push:  # Triggers the workflow on code push
  pull_request:  # Triggers the workflow on pull request creation/update
  issues:  # Triggers the workflow on issue generation or updates
    types: [opened, edited]  # Specifies which types of issues should trigger the workflow
  workflow_dispatch:
    inputs:
      ec2-name:
        description: EC2 name
        required: true
        default: 'App Server'
        type: string

jobs:
  provision-ec2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.TF_GITHUB_USER_ID }}'
          aws-secret-access-key: '${{ secrets.TF_GITHUB_USER_ACCESS }}'
          aws-region: us-east-2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform destroy
        id:   apply
        env:
          TF_VAR_ec2_name:  "${{ github.event.inputs.ec2-name }}"
        run: |
          cd tf-files/
          terraform init
          terraform validate
          terraform fmt main.tf
          terraform fmt main1.tf
          terraform fmt variable.tf
          terraform plan 
          terraform destroy
